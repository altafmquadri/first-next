{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/mnt/c/users/aq56215/development/first-next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nvar Post = function Post(_ref) {\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Comments for Post \", id, \" \"), comments.map(function (comment) {\n    return __jsx(Comment, _extends({\n      key: comment.id\n    }, comment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }));\n};\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, email), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, body));\n};\n\nexport var __N_SSP = true;\nexport default Post;","map":{"version":3,"sources":["/mnt/c/users/aq56215/development/first-next/pages/post.js"],"names":["Post","id","comments","map","comment","Comment","email","body"],"mappings":";;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAsB;AAAA,MAAnBC,EAAmB,QAAnBA,EAAmB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBD,EAAvB,MADJ,EAEKC,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO;AAAA,WACjB,MAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,OAAO,CAACH;AAAtB,OAA8BG,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADiB;AAAA,GAApB,CAFL,CADJ;AAQH,CATD;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,IAAV,SAAUA,IAAV;AAAA,SACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFJ,CADY;AAAA,CAAhB;;;AAOA,eAAeP,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst Post = ({ id, comments }) => {\n    return (\n        <div>\n            <h1>Comments for Post {id} </h1>\n            {comments.map(comment => (\n                <Comment key={comment.id} {...comment} />\n            ))}\n        </div>\n    );\n}\n\nconst Comment = ({ email, body }) => (\n    <div>\n        <h5>{email}</h5>\n        <p>{body}</p>\n    </div>\n)\n\nexport default Post;\n\nexport async function getServerSideProps({ query }) {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n    const data = await res.json()\n    return {\n        props: {\n            ...query, comments: data\n        }, // will be passed to the page component as props\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}