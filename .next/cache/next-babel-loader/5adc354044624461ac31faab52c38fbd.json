{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/aq56215/development/first-next/pages/blog.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// You can use any data fetching library\nimport fetch from 'node-fetch'; // posts will be populated at build time by getStaticProps()\n\nconst Blog = ({\n  props\n}) => {\n  console.log(props);\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, posts.map(post => __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, post.title)));\n}; // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport const getStaticProps = async () => {\n  // Call an external API endpoint to get posts.\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n};\nexport default Blog;","map":{"version":3,"sources":["/mnt/c/users/aq56215/development/first-next/pages/blog.js"],"names":["fetch","Blog","props","console","log","posts","map","post","title","getStaticProps","res","json"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,YAAlB,C,CAEA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,KAAK,CAACC,GAAN,CAAUC,IAAI,IACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CADH,CADL,CADJ;AAOH,CATD,C,CAWA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACtC;AACA,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMK,KAAK,GAAG,MAAMK,GAAG,CAACC,IAAJ,EAApB,CAHsC,CAKtC;AACA;;AACA,SAAO;AACHT,IAAAA,KAAK,EAAE;AACHG,MAAAA;AADG;AADJ,GAAP;AAKH,CAZM;AAcP,eAAeJ,IAAf","sourcesContent":["// You can use any data fetching library\nimport fetch from 'node-fetch'\n\n// posts will be populated at build time by getStaticProps()\nconst Blog = ({ props }) => {\n    console.log(props)\n    return (\n        <ul>\n            {posts.map(post => (\n                <li>{post.title}</li>\n            ))}\n        </ul>\n    )\n}\n\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\nexport const getStaticProps = async () => {\n    // Call an external API endpoint to get posts.\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n    const posts = await res.json()\n\n    // By returning { props: posts }, the Blog component\n    // will receive `posts` as a prop at build time\n    return {\n        props: {\n            posts,\n        },\n    }\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}