{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/mnt/c/users/aq56215/development/first-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var posts = this.props.posts;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Our Index Page!!\"), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, posts.map(function (p) {\n        return __jsx(\"li\", {\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, __jsx(Link, {\n          as: \"/p/\".concat(p.id),\n          href: \"/post?id=\".concat(p.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, p.title)));\n      })));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\n// functional approach\n// const Index = ({ posts }) => {\n//     return (\n//         <div>\n//             <h1>Our Index Page!!</h1>\n//             <ul>\n//                 {posts.map(p => (\n//                     <li key={p.id}>{p.title}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\nexport var __N_SSG = true;\nexport default Index;","map":{"version":3,"sources":["/mnt/c/users/aq56215/development/first-next/pages/index.js"],"names":["React","Component","Link","Index","posts","props","map","p","id","title"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,K;;;;;;;;;;;6BACO;AAAA,UACGC,KADH,GACa,KAAKC,KADlB,CACGD,KADH;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,KAAK,CAACE,GAAN,CAAU,UAAAC,CAAC;AAAA,eACR;AAAI,UAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD;AAAM,UAAA,EAAE,eAAQD,CAAC,CAACC,EAAV,CAAR;AAAwB,UAAA,IAAI,qBAAcD,CAAC,CAACC,EAAhB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,CAAC,CAACE,KAAN,CAAlD,CADJ,CADQ;AAAA,OAAX,CADL,CAFJ,CADJ;AAYH;;;;EAfeR,S;;AA8BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeE,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport React, { Component } from 'react';\nimport Link from 'next/link'\n\nclass Index extends Component {\n    render() {\n        const { posts } = this.props\n        return (\n            <div>\n                <h1>Our Index Page!!</h1>\n                <ul>\n                    {posts.map(p => (\n                        <li key={p.id}>\n                            <Link as={`/p/${p.id}`} href={`/post?id=${p.id}`}><a>{p.title}</a></Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport const getStaticProps = async () => {\n    // Call an external API endpoint to get posts.\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts')\n    const posts = await res.json()\n    console.log('i am here')\n    return {\n        props: {\n            posts,\n        },\n    }\n}\n\n// functional approach\n// const Index = ({ posts }) => {\n//     return (\n//         <div>\n//             <h1>Our Index Page!!</h1>\n//             <ul>\n//                 {posts.map(p => (\n//                     <li key={p.id}>{p.title}</li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// }\n\n\nexport default Index\n\n"]},"metadata":{},"sourceType":"module"}