{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/aq56215/development/first-next/pages/post.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\n\nconst Post = ({\n  query\n}) => {\n  console.log(query);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"You are looking at post \"));\n};\n\nexport default Post;\nexport async function getServerSideProps({\n  query\n}) {\n  const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  const data = await res.json();\n  return {\n    props: _objectSpread({}, query, {\n      comments: data\n    }) // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["/mnt/c/users/aq56215/development/first-next/pages/post.js"],"names":["fetch","Post","query","console","log","getServerSideProps","res","id","data","json","props","comments"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CADJ;AAMH,CARD;;AAUA,eAAeD,IAAf;AAEA,OAAO,eAAeI,kBAAf,CAAkC;AAAEH,EAAAA;AAAF,CAAlC,EAA6C;AAChD,QAAMI,GAAG,GAAG,MAAMN,KAAK,CAAE,wDAAuDE,KAAK,CAACK,EAAG,EAAlE,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAO;AACHC,IAAAA,KAAK,oBACER,KADF;AACSS,MAAAA,QAAQ,EAAEH;AADnB,MADF,CAGA;;AAHA,GAAP;AAKH","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nconst Post = ({ query }) => {\n    console.log(query)\n    return (\n        <div>\n            <h1>You are looking at post </h1>\n\n        </div>\n    );\n}\n\nexport default Post;\n\nexport async function getServerSideProps({ query }) {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`)\n    const data = await res.json()\n    return {\n        props: {\n            ...query, comments: data\n        }, // will be passed to the page component as props\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}